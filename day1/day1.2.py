'''
python的基本数据类型
'''

'''
python的基本数据类型有下列几种：
数值数据类型（numeric type）：常见的数值数据可分为整数型（int）。浮点型（float）。不论是整数或浮点数都可以是任意大小
布尔值（boolean）数据类型：也可归为数值数据类型
文字序列类型(text sequence type):也就是字符串（string）数据类型
序列类型（sequence type）：列表（list）和  元组（tuple）
对映类型（mapping type): 字典（dict）
集合类型（set type）：集合（dict）
'''


'''
type()
type函数可以列出变量的数据类型类别。因为在程序设计过程中变量的数据类型会发生改变，我们需要此函数来判断目前函数数据类型
'''

#实例一：列出数值变量的数据类型
x = 10;
y = x / 3;
print(x)
print(type(x))
print(y);
print(type(y))

'''
数值数据类型
python在声明变量时可以不用设置这个变量的数据类型，未来如果这个变量内容是存放整数。这个变量就是整数型（int）；
如果这个变量内容是存放浮点数，这个变量就是浮点数据类型。
整数与浮点数最大的区别就是整数不含小数点，浮点数含小数点
'''

'''
整数与浮点数的运算
python程序设计时不相同的数据类型也可以执行运算，程序设计时常会发生整数与浮点数之间的数据运算，
python具有简单的自动转换能力，在计算时会将整数转换为浮点数再执行运算。
'''

#实例二：不同数据类型的运算
x1 = 10;
y1 = x1 + 5.5;
print(x1);
print(type(x1))
print(y1)
print(type(y1))
#变量y1为整数与浮点数的加法，所以结果是浮点数。此外，某一个变量如果是整数
#但是如果最后所储存的值是浮点数，python也会将此变量转换为浮点数
x2 = 10
print(x2)
print(type(x2))   #在这一步时x2储存的是10，一个整数，所以类型为int
x2 = x2 + 5.5
print(x2)
print(type(x2))   #在这一步时x2存储的时15.5，一个浮点型，所以类型为float

'''
强制转换数据类型
在我们设计程序时，可以自行强制使用下列函数，转换变量的数据类型。
int() : 将数据类型强制转换为整数型int
float() : 将数据类型强制转换为浮点型float
'''

#实例三:将浮点数强制转换为整数的运算
x3 = 10.5
print(x3)
print(type(x3))  #在加法前列出x3的数据类型
y3 = int(x3) + 5   #在这一步将x3强制转换为整数型int
print(y3)
print(type(y3))   #查看y3的数据类型
z = float(y3) + 5  #将y3强制转换为浮点型
print(z)
print(type(z))    #查看z的数据类型

'''
数值运算常用函数
abs（）：计算绝对值
pow（x，y）：返回x的y次方
round（x，n）：这是采用算法（algorithm）的 Bankers Rounding概念，x是要处理的数字
n是小数字数。如果省略n，则表示取整数忽略小数字数，如果有n则代表所处理的小数字数。
处理整数时，如果处理位数左边的奇书，则四舍五入；如果处理位数左边是偶数，则五舍六入，例如round(1.5)=2,round(2.5)=2.round(2.6）=3.
处理小数时，采用下一小数字数采用5以下舍去，51以上进位的处理方式，例如：round(2.15,1)=2.1,round(2.25,1)=2.2,round(2.151,1)=2.2
round(2.251,1)=2.3.
上述round（）的第二个参数1，代表取到小数第一位，是否四舍五入，五舍六入查看第二位。
'''

#实例四：abs，pow，round得运用
x4=-10
print("下面输出得是abs得运用")
print(x4)       #输出原本得x4值
print(abs(x4))  #输出运用abs函数后得x4得值
x5=2
y5=3
print("下面输出pow得运用")
print(pow(x5,y5))
x6=2.5
print("下面输出round得运用")
print(round(x6))    #2.5则五舍六进
x7=2.51
print(round(x7))     #2.51>2.5则进1
x8=1.4
print(round(x8))
x9=1.5
print(round(x9))
x10=2.55
print(round(x10,1))   #当为round（x，n）时则n代表小数点后移得位数，是否四舍五入或五舍六入看的依旧是整数位得值

"""
布尔值数据类型
python的布尔值（boolean）数据类型有两种，True（真）或Flase（假）。它的数据类型代号是bool。
这个布尔值一般应用在程序流程的控制中，特别在条件语句中，程序可以根据这个布尔值判断应该如何执行工作。
"""

#实例七：列出布尔值及布尔值的数据类型
x11=True
print(x11)
print(type(x11))
y11=False
print(y11)
print(type(y11))

"""
字符串数据类型
所谓的字符串（string）数据是指两个单引号（'')之前或者两个双引号（"")之间任意个数符号的数据，
它的数据类型代号是str。
"""

# x12= 'This is James's ball'        错误示范，如果出现英文中的单引号需要使用则需要用两个双引号来表示字符串
# print(x12)

x12= "This is qingshan's notes"
print(x12)
print(type(x12))
x13='我见众生皆草木，唯有见你是青山'
print(x13)
print(type(x13))
"""
字符串连接
数学运算符+，可以执行两个字符串相加，产生新的字符串
"""

#实例八：字符串链接的应用
num="123"
num1="456"
num2= num + num1
print(num2)
print(type(num2))    #数字类型字符串的相加
strj = "qingshan's"
str1= "notes"
str3=strj+str1
print(str3)     #字符串拼接
str4=str1+strj
print(str4)     #参数的位置决定了字符串的位置
str5="我见众生皆草木"
str6="唯有见你是青山"
str7=str5+" "+str6      #中间可以加空格或者符号。
print(str7)


#实例九：处理多于一行的字符串
stra = '''我见众生皆草木，
唯有见你是青山'''       #可以见到，三引号在这里做了一个链接引用而不是注释的作用，如果没有stra则依旧为注释
print(stra)



'''
逸出字符串
在字符串使用中，如果字符串有一些特殊的符号，例如：双引号，单引号等，必须要在此特殊字符前面加\才可以正常使用，
这种含有\的特殊字符串被成为逸出字符，如下所示
逸出字符                hex值               意义
\'                     27                  单引号
\"                     22                  双引号
\\                     5C                  反斜杠
\a                     07                  响铃
\b                     08                  breakspace键
\f                     0C                   换页
\n                     0A                  换行
\r                     0D                  光标移动到最左侧
\t                     09                     TAB建作用 
\v                     0B                   垂直定位
'''

#实例十：逸出字符的使用
yc =  '金风雨露一相逢\'便胜却人间无数'          #可以在打印的里面看到\'到最后变成了一个'
print(yc)
yc1 = '你本无意穿堂风\"偏偏孤倨引山洪'          #可以在打印的里面看到\"到最后变成了一个“
print(yc1)
yc2 = '慢品人间烟火色\\闲观万事岁月长'          #可以在打印里看到\\到最后变成了一个\
print(yc2)
yc3 = '我于旧事归于尽\a来年依旧迎花开'          #\a打印出来变成了一个
print(yc3)
yc4 = '追风赶月莫停留\b平无尽处是春山'          #可以看到在打印里删除了留
print(yc4)
yc5 = '醉后不知天在水\f满船清梦压星河'          #\f打印出来变成了一个
print(yc5)
yc6 = '劝君莫惜金缕衣\n劝君须惜少年时'           #可以看到在打印里进行了换行
print(yc6)
yc7 = '有花堪折直须折\r莫待无花空折枝'           #可以看到光标移动到了最左侧，前半句直接被干掉了
print(yc7)
yc8 = '我本桀骜少年臣\t不信鬼神不信人'           #可以看到\t发挥了tab的作用，出现一片空白
print(yc8)
yc9 = '人间烟火气\v最抚凡人心'                  #
print(yc9)


'''
强制转换为字符串str()
str()函数可以强制将数值数据转换为字符串数据
'''
#实例十一：使用str函数将数值数据强制转换为字符串数据
num3 = 222
num4 = 333
num5 = num3 + num4    #这是数据相加
print(num5)   #数值数据
strb = str(num3) + str(num4)   #这是将数值数据转换为字符串数据据并使字符串相加
print(strb)   #字符串数据

'''
字符数据的转换
如果字符串含一个字符或一个文字时，可以使用下列执行数据的转换
chr（x）：可以返回函数x值的字符，x时ASCII码值
ord（X）：可以返回函数字符参数x的Unicode码值，如果时中文字也可以返回Unicode码值。
如果时英文字符，Unicode码值与ASCII码值时一样的
注：多个英文字符或者中文字符不可用ord，chr只可用整数
'''
#实例十一：chr和ord的运用
acb = 97
acc = 'j'
acd = '青'
print(chr(acb))
print(ord(acc))
print(ord(acd))
